<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ysk.source.dao.DoctorWithdrawMapper">
	<resultMap id="BaseResultMap" type="com.ysk.source.entity.DoctorWithdraw">
		<id column="RECORD_ID" jdbcType="VARCHAR" property="recordId" />
		<result column="DOCTOR_ID" jdbcType="VARCHAR" property="doctorId" />
		<result column="WITHDRAWAL_AMOUNT" jdbcType="INTEGER" property="withdrawalAmount" />
		<result column="WITHDRAWAL_TIME" jdbcType="VARCHAR" property="withdrawalTime" />
		<result column="WITHDRAWAL_TYPE" jdbcType="INTEGER" property="withdrawalType" />
		<result column="ACCOUNT_NAME" jdbcType="VARCHAR" property="accountName" />
		<result column="BACKUP_DATA" jdbcType="VARCHAR" property="backupData" />
		<result column="BACKUP_TEXT" jdbcType="VARCHAR" property="backupText" />
	</resultMap>

	<sql id="Base_Column_List">
		RECORD_ID, DOCTOR_ID, WITHDRAWAL_AMOUNT, WITHDRAWAL_TIME,
		WITHDRAWAL_TYPE, ACCOUNT_NAME
	</sql>

	<insert id="insert" parameterType="com.ysk.source.entity.DoctorWithdraw">
		insert into doctor_withdraw
		(RECORD_ID, DOCTOR_ID, WITHDRAWAL_AMOUNT, WITHDRAWAL_TIME,
		WITHDRAWAL_TYPE, ACCOUNT_NAME)
		values
		(#{recordId}, #{doctorId},
		#{withdrawalAmount}, #{withdrawalTime}, #{withdrawalType},
		#{accountName})
	</insert>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from doctor_withdraw
		where RECORD_ID = #{recordId}
	</select>

	<select id="selectAllByPage" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from doctor_withdraw
		<trim prefix="where" prefixOverrides="and|or">
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(doctorId)">and DOCTOR_ID = #{doctorId}
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(withdrawalAmount)">and WITHDRAWAL_AMOUNT = #{withdrawalAmount}
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(withdrawalTime)">and WITHDRAWAL_TIME = #{withdrawalTime}
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(withdrawalType)">and WITHDRAWAL_TYPE = #{withdrawalType}
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(accountName)">and ACCOUNT_NAME = #{accountName}
			</if>
		</trim>
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		doctor_withdraw
	</select>

	<update id="updateByPrimaryKey" parameterType="com.ysk.source.entity.DoctorWithdraw">
		update
		doctor_withdraw
		<trim prefix="set" suffixOverrides=",">
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(doctorId)"> DOCTOR_ID = #{doctorId},
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(withdrawalAmount)"> WITHDRAWAL_AMOUNT = #{withdrawalAmount},
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty(withdrawalTime)"> WITHDRAWAL_TIME = #{withdrawalTime},
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty()"> WITHDRAWAL_TYPE = #{withdrawalType},
			</if>
			<if test="@com.ysk.kxt.util.mybatis.Ognl@isNotEmpty()"> ACCOUNT_NAME = #{accountName},
			</if>
		</trim>
		where RECORD_ID =
		#{recordId,jdbcType=VARCHAR}
	</update>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		doctor_withdraw where RECORD_ID = #{recordId,jdbcType=VARCHAR}
	</delete>



</mapper>